Apache Virtual hosts

apache, virtual host, local, webdevelopment, url

Als webdesigner / webdeveloper heb je vaak te maken met root relative paden naar externe bestanden die gebruikt worden op de website. Als je websites ontwikkeld in je eigen Sites directory kom je met dit nogal voor een probleem te staan. Hier is een mooie oplossing voor welke ik persoonlijk heel erg handig vind.

[attention]Er is een update op dit artikel die uitlegt hoe virtual-hosts via [article=apache-mod_vhost_alias-virtual-hosts]Apache mod_vhost_alias[/article] geautomatiseerd kunnen worden.[/attention]

[img=float_right]atlantis_uploads/uploads/logo_apache.gif[/img]Dit artikel is getest op [b]Mac OS X Leopard v10.5[/b]. Dit werkt ook op Mac OS X Tiger, al zijn daar sommige paden naar Unix bestanden anders dan bij Leopard. De Apache configuratie file van Tiger is te vinden op [b]/etc/httpd/httpd.conf[/b]. Ook zijn de namen van [b]System Preferences[/b] iets anders.

[attention]Let op![/attention] In dit artikel maak ik als voorbeeld gebruik van een fictief persoon genaamd [b]kees[/b]. De thuismap (home directory) van deze Kees heet dan ook [b]kees[/b]. In de thuismap van [b]kees[/b] (net als alle andere Mac OS X gebruikers) is een [b]Sites[/b] map aanwezig.

[h2]Test website als voorbeeld[/h2]
Kees heeft een mooie website gemaakt in een map genaamd [b]vogelfotografie[/b], welke hij bewaard heeft in z'n eigen [b]Sites[/b] map van zijn eigen [b]thuis map[/b].  Het pad naar deze website is dus als volgt. 

[code]/Users/kees/Sites/vogelfotografie[/code]

Kees heeft via de Mac OS X [b]System Preferences > Sharing[/b] en dan [b]Websharing[/b] aangevinkt zodat de [b]Apache webserver[/b] opgestart is. Met de volgende URL kan hij deze website bekijken in een webbrowers zoals bijvoorbeeld Safari of Firefox. 

[code]http://127.0.0.1/~kees/vogelfotografie[/code]

Deze website draait vanaf Kees z'n eigen Mac. Het IP nummer (127.0.0.1) betekend in feite je eigen Mac, ofwel [b]localhost[/b].

Kees heeft deze website op internet gezet op het volgende fictieve adres. 

[code]http://www.vogelfotografie.nl/[/code]

Maar hij bewerkt zijn website op zijn eigen Mac. Zodra hij klaar is upload hij de website naar bovenstaand adres.

[h2]Basis webdesign en paden naar externe bestanden[/h2]
[attention]Als je al aardig bekend bent met webdesign en begrijpt wat root relative en document relative paden zijn, kun je dit hoofdstuk direct skippen.[/attention]

Er zijn 2 manier om in HTML bestanden paden (links) te leggen naar externe bronnen zoals plaatjes, linked Css (Cascading Style Sheets) en Javascripts etc.

[h3]1) Document relative paden[/h3]
Op een HTML pagina is een link gemaakt naar een plaatje, zoals hieronder het pad te zien is naar dit plaatje.

[code]img/merel.jpg[/code]

of ...

[code]../img/merel.jpg[/code]

Beide manier geven aan dat het plaatje [b]relatief[/b] te vinden is op het aangegeven pad. Dat wil dus zeggen dat het plaatje in de [b]img[/b] map staat in dezelfde map als waar momenteel de HTML pagina staat waar het plaatje in gebruikt wordt.

[h3]2) Root relative paden[/h3]
Op veel websites en misschien ook in Kees z'n website worden [b]root[/b] relative paden gebruikt. Dat wil zeggen dat in bovenstaande HTML pagina de paden (naar bijvoorbeeld merel.jpg) op een absolute manier aangegeven worden.

[h4]Let op de eerste slash[/h4]
[code]/img/merel.jpg[/code]

Het voordeel van deze manier is dat het plaatje altijd gevonden kan worden. Op welke HTML pagina dan ook en in welke [b]onderliggende[/b] map dan ook. Mocht de HTML pagina (waar dit plaatje in gebruikt wordt) verhuizen naar bijvoorbeeld [b]/soorten/vogels.html[/b], dan is het plaatje nog steeds te zien zonder dat Kees daar aanpassingen in moet maken. De eerste slash [b]/[/b] wil zeggen dat de [b]webbrowser[/b] helemaal naar het begin van de website (de [b]root[/b]) moet kijken en vanaf daar het plaatje moet gaan opzoeken zoals het staat aangegeven.

De root relative manier brengt problemen met zich mee als Kees z'n website maakt en bekijkt vanuit zijn eigen Sites map in Safari op onderstaand adres.

[code]http://127.0.0.1/~kees/vogelfotografie[/code]

Wat gaat er dan precies fout? De webbrowser krijgt opdracht om het [b]/img/merel.jpg[/b] plaatje te laten zien. De webbrower gaat dus kijken op het volgende adres.

[code]http://127.0.0.1/img/merel.jpg[/code]

Dit plaatje is niet te vinden op bovenstaand URL adres. Immers heeft Kees aangegeven dat het plaatje daar te vinden is.

Zodra kees zijn zojuist gemaakt website upload naar het internet en via de [b]domeinnaam[/b] kijkt zal het [b]merel.jpg[/b] plaatje wel te vinden zijn.

[code]http://www.vogelfotografie.nl/img/merel.jpg[/code]

[h2]Waar gaat het nou eigenlijk om?[/h2]
Goed, over bovenstaand [b]probleem[/b] gaat dit hele artikel. We gaan op onze eigen Mac [b]simuleren[/b] dat we werken met een [b]domeinnaam[/b]. Zodat we gebruik kunnen maken van root relative paden in ons webdesign en webdevelopment proces.

We willen graag gebruik maken van root relative paden. Zodat als Kees z'n website klaar is hij het direct op internet kan zetten zonder verder aanpassingen te doen. De wat gevorderde gebruikers zullen direct herkennen wat ik bedoel. 

[attention]Een oplettende webdesigner zal direct roepen dat [b]root relative paden helemaal niet perse nodig zijn[/b].[/attention] Dat klopt maar voor dit voorbeeld en Apache Virtual host gaan we dit wel gebruiken. Root relative paden komen juist wel van pas als we wat [b]complexere website [/b]gaan bouwen en moet onderhouden.

Voor het simuleren van een domeinnaam heb je helemaal [b]geen domeinnaam nodig[/b]. Je moet dus ook niks aanvragen of iets dergelijks. Het gebeurt straks allemaal [b]gratis[/b] op onze eigen Mac.

[h2]Wat willen we bereiken[/h2]
We gaan 4 dingen aanpassen op onze Mac en de Apache webserver. Zodat we het volgende kunnen bereiken.

Kees maakt en test nog steeds zijn [b]vogelfotografie[/b] website in zijn eigen [b]Sites[/b] map.

[code]/Users/kees/Sites/vogelfotografie[/code]

Kees wil zijn [b]root relative website[/b] testen op de volgende manier. Zodat ook zijn voorbeeld [b]/img/merel.jpg[/b] plaatje (en vele andere extern materiaal) het gewoon doet.

[code]http://vogelfotografie.local/[/code]

Dus in tegenstelling tot [b]http://127.0.0.1/~kees/vogelfotografie[/b]. De domeinnaam is fictief en het achterste stuk [b].local[/b] wordt express gebruikt dat Kees weet dat het een website is die vanaf zijn eigen Mac draait.

Dit is allemaal te regelen met [b]Apache Virtual hosts[/b] wat standaard op onze Mac al staat geinstalleerd. Het wordt namelijk standaard bij de Apache webserver inbegrepen.

[h2]Apache 2.x configuratie backup maken[/h2]
Voordat we dingen eventueel stuk maken gaan we eerst een backup maken van de Apache webserver configuratie. Open de [b]Terminal[/b] applicatie (/Applications/Utilities/Terminal). We gaan eerst een backup maken van het Apache configuratie bestand. 

[h4]Ga eerst naar de map waar het configuratie bestand staat[/h4]
[code]cd /etc/apache2[/code]

[h4]Vraag een lijst met bestanden op. Deze stap is perse nodig[/h4]
[code]ls -l[/code]

Hier zien we welk bestand we moeten hebben, namelijk [b]httpd.conf[/b]. Typ het volgende commando in en geef een administrator wachtwoord op.

[h4]Backup maken[/h4]
[code]sudo cp httpd.conf httpd.conf_backup[/code]

Vraag met [b]ls -l[/b] opnieuw een lijst op en we zien dat er een backup bestand is gemaakt. Voor degene die met de Unix terminal overweg kunnen weten hoe ze met de commando's [b]rm[/b] en [b]mv[/b] de backup weer terug kunnen zetten.

[h2]Unix bestanden bewerken met TextWrangler[/h2]
[img=float_right]atlantis_uploads/uploads/logo_textwrangler.gif[/img]Download eerst het [b]gratis[/b] [url=http://www.barebones.com/products/textwrangler/]TextWrangler[/url] of gebruik zijn commerciele broer [url=http://www.barebones.com/products/bbedit/]BBEdit[/url]. Hiermee kunnen we straks makkelijk aanpassingen maken aan Unix configuratie bestanden op onze Mac. TextWrangler of BBedit zijn echte Mac OS X text-editors. Hiermee kun je ook website met de hand maken, PHP programmeren en nog veel meer op het gebied van text-editten.

Start [b]TextWrangler[/b] (of BBEdit) en laat het de [b]command line tools[/b] installeren. We kunnen nu aan de slag. Als je gebruik maakt van [b]BBEdit[/b] is het commando om bestanden te bewerken (vanuit de Ternimal) '[b]bbedit[/b]' in plaats van '[b]edit[/b]' welke [b]TextWrangler[/b] gebruikt.

[h2]Apache configuratie aanpassen[/h2]
Open de [b]Terminal[/b] en typ het volgende commando in.

[code]edit /etc/apach2/httpd.conf[/code]

[b]TextWrangler[/b] (of BBEdit) opent zich met het Apache 2.x configuratie bestand. Hierin kunen vele zaken van de webserver veranderd worden.

Ga helemaal naar het eind van dit bestand en [b]plak[/b] onderstaand stukje tekst er als laaste bij.

[h3]Custom configuratie bestand laden[/h3]
[code]Include /Users/kees/Sites/.apache2.conf[/code]

[attention]Let op! In dit voorbeeld maken we gebruik van de gebruiker [b]kees[/b], vul hier dus de naam in van je eigen thuismap.[/attention].

Bewaar dit bestand en vul een administrator wachtwoord in. Dit is een Unix beveiligd bestand wat restricties heeft.

Nu zal, na een herstart van Apache, de Apache webserver bovenstaand bestand ook opnemen in de configuratie van de webserver.

[h2]Apache Virtual host aanmaken[/h2]
In TextWrangler maken we een nieuw leeg bestand aan. Hierin zetten we het volgende wat op [url=http://www.atlantisdesign.nl/public/apache_virtual_host.txt]dit adres staat[/url].

[attention]Let op! Verander het pad naar je eigen thuismap.[/attention]. Bewaar dit bestand vervolgens in je eigen Sites map met de volgende naam (zoals je hiervoor al had aangegeven in de Apache configuratie: [b].apache2.conf[/b]. Met andere woorden het wordt op deze plek bewaard.

[code]/Users/kees/Sites/.apache2.conf[/code]

TextWrangler zal een [b]melding geven[/b] omdat we de bestandsaam beginnen met een [b]punt[/b]. Bestanden die met een punt beginnen worden verborgen in Unix systemen. We zijn het hierna dus zeg maar [b]kwijt[/b]. Het is niet meer terug te vinden in de Finder. Niet getreurd want het bestand is er nog steeds!

[h2]Mac OS X /etc/hosts file aanpassen[/h2]
Alle computer operating systemen, Windows, Mac OS X, Unix en Linux, hebben allemaal een bestand dat heet [b]hosts[/b]. Hierin wordt een soort van kleine mini-database bewaard (gewoon een tekst bestand) waar web adressen staan vermeld die anders zijn als dat je zou verwachten. 

Je kunt dus http://www.adobe.nl/ laten verwijzen naar een ander web adres wat je zelf kunt verzinnen. In en webbrowers kun je dus een URL intypen waarna je computer eerst dit bestand raardpleegt alvorens het op internet gaat zoeken naar het web adres.

We moeten dus in dit bestand vermelden dat ons fictieve domeinnaam op onze eigen Mac staat en niet op internet te vinden is. Hierdoor neem je alle webbrowers op je eigen Mac in de maling. 

Als je weet hoe je een backup kan maken van dit bestand doe je dat natuurlijk eerst (zie begin van dit artikel). Open de [b]Terminal[/b] en typ het volgende commando in.

[code]edit /etc/hosts[/code]

TextWrangler opent het [b]hosts[/b] file. Dit ziet er verder niet zo spannend uit. Plak onderstaande regel aan het eind van dit bestand en bewaar het met een administrator wachtwoord.

[code]127.0.0.1	vogelfotografie.local[/code]

Nu hebben we onze Mac [b]geleerd[/b] dat als we [b]http://vogelfotografie.local[/b] opgeven in een webbrower dat hij kijkt op onze eigen Mac.

[h2]Apache herstarten[/h2]
Goed, we zijn bijna klaar. Nu moeten we de Apache webserver [b]herstarten[/b] zodat deze weet dat we een extra configuratie bestand hebben gemaakt en een Virtual host hebben aangemaakt [b]http://vogelfotografie.local/[/b]

Dit kan op 2 manieren. 

[h3]1) Via System Preferences[/h3]
Open linksbovenin de [b]Apple > System Preferences[/b], zoek [b]Sharing[/b] op en vink [b]Websharing[/b] uit en even later weer aan.

[h3]2) Via een Terminal commando[/h3]
Open de Terminal en typ het volgende commando in met een aministrator wachtwoord.

[code]sudo apachectl graceful[/code]

[h2]Virtual host testen[/h2]
Nu gaan we kijken of het ook allemaal werkt! Open Safari en typ onderstaande URL in.

[code]http://vogelfotografie.local/[/code]

En zowaar!! We zien de website voor ons die in [b]Kees[/b] z'n eigen [b]Sites[/b] map staat. Het plaatje [b]/img/merel.jpg[/b] wordt ook goed getoond.

[h2]De voordelen van deze manier van werken[/h2]
Kees kan nu zijn website verder bouwen en testen op bovenstaand nep domeinnaam wat op zijn eigen Mac draait. Hij kan zijn paden root relative maken (laten) en het lijkt erop dat de website op een echte domeinnaam draait.

[h2]Meer websites op deze manier laten draaien[/h2]
Het voordeel van deze opzet is dat je makkelijk meerdere websites op deze manier kan ontwikkelen.

[h3]/etc/hosts[/h3]
Maak meerdere regels aan met dezelfde soort domeinnaam ([b].local[/b]) als in het voorbeeld gebruikt worden.

[h3]Het verborgen Virtual hosts configuratie bestand [/h3]
Open [b]TextWrangler[/b] en kies [b]File > open hidden ....[/b] Blader nu naar je eigen [b]Sites[/b] mapen en open het verborgen [b].apache2.conf[/b] bestand.

Kopieer het blok stukje [b]Virtual host[/b] (laatste 4 regels) en plak het nogmaals onderaan het bestand. Verander de naam van de virtual host (zie dezelfde regel als in de [b]/etc/hosts[/b] bestand, dit is [b]heel belangrijk![/b]) en het pad waar op je eigen Mac deze website te vinden is.

[h3]Herstart Apache[/h3]
[b]Herstart[/b] de Apache webserver en je hebt nog zo'n fictieve domeinnaam om een website in te testen.

[h2]De virtual hosts vanaf een andere computer bekijken[/h2]
Het mooie van deze opzet is dat je op je eigen Mac [b]veel[/b] van dit soort virtual hosts (nep domeinen) kunt draaien. Het zou ook handig zijn als je vanaf een andere computer, bijvoorbeeld vanaf [b]Windows[/b] de websites kan testen.  Het design en de website zelf moet natuurlijk ook goed werken op Windows in marktleider [b]Internet Explorer 6[/b] (en straks 7).

Standaard als je het IP nummer van je Mac in de webbrowser van een andere computer typt wordt de[b] default document root[/b] getoond, op de Mac is dat de map /Library/WebServer/Documents. Daar staat je website natuurlijk niet. Echter als je de [b]http://vogelfotografie.local/[/b] website intypt op zo'n andere computer gebeurt er vrij weinig.

[h3]Hosts file[/h3]
Elk besturing systeem (Mac, Linux/Unix en Windows) hebben zo'n hosts bestand. Het is immers gewoon de truuk om ook op die computers aan te geven dat bijvoorbeeld ...

[code]http://vogelfotografie.mac/[/code]

... verwijst naar de Mac. Vanaf daar pakt de Apache virtual host het weer op (die 'ziet' dat de vogelfotografie website opgevraagd wordt) en serveerd de juiste website vanaf de Mac. In het voorbeeld heb ik de URL iets veranderd. Dit kun je natuurlijk geheel zelf verzinnen en heeft niks met .Mac (dot Mac) te maken.

[h3]Wat hebben we hiervoor nodig?[/h3]
[list]
[*]Het externe [b]IP nummer[/b] van onze Mac. Dat kan ook het interne IP nummer zijn als we toch alleen maar willen testen in het eigen netwerk.
[*]Dezelfde aanpassingen aan het [b]hosts[/b] bestand als dat we al op onze Mac hadden gedaan, maar dan op de andere computer(s)
[/list]

[h2]Het externe of interne IP nummer van de Mac[/h2]
Voor het testen [b]binnen het eigen netwerk[/b] (bijvoorbeeld op het werk) ga je naar in de linkerbovenhoek naar [b]Apple'tje > System Prefrences > Network[/b]. Daar staat het [b]interne[/b] IP adres van onze Mac.

[h4]Extern IP adres[/h4]
Test je buiten je eigen netwerk dan moet je via internet even kijken wat het externe IP nummer is. Dat zijn verschillende IP nummers. Het een wordt door de internet router op het werk aan jou Mac toegewezen en het andere IP nummer is hoe de Mac via internet zelf te bereiken is.

Kijk bijvoorbeeld op de website van [url=http://whatismyip.com/]What's My IP[/url] om het externe IP nummer van je Mac te achterhalen.

[h3]Router[/h3]
[attention]Let op![/attention] Staat de Mac in een netwerk met meerdere computers, achter een router welke het internet verkeer regelt, dan moet eerst op de router worden ingesteld dat port nummer 80 (dat is het http protocol) door verwijst naar jou Mac. Neem hiervoor contact op met de netwerk beheerder. Om dat uit te leggen is dit artikel te klein voor.

[h2]Windows hosts bestand aanpassen[/h2]
Op de desbetreffende Windows computer gaan we onderstaand bestand openen in een tekst-editor, bijvoorbeeld Notepad.

[code]c:\windows\system32\drivers\etc\hosts[/code]

De indeling van dit bestand is vrijewel identiek aan dat van elk besturingssysteem. Zorg dat je het interne (of externe ) IP nummer van de Mac bij de hand hebt. Maak een nieuwe regel aan onderaan het hosts bestand. Dat komt er dan bijvoorbeeld zo uit te zien. Vervang natuurlijk het IP nummer door die van de Mac.

[code]192.168.1.12 vogelfotografie.mac[/code]

[h3]Testen[/h3]
Open nu bijvoorbeeld [b]Internet Explorer[/b] op de Windows computer en typ de naam in van de virtual host.

[code]http://vogelfotografie.mac[/code]

De Windows computer raadpleegd [b]eerst[/b] het [b]hosts[/b] bestand. Hierin staat dat dit webadres naar het IP nummer van de Mac verwijst. Daar gaat de Windows computer ook [b]vogelfotografie.mac[/b] opvragen. 

Je zult vast wel gezien hebben dat in [url=http://www.atlantisdesign.nl/public/apache_virtual_host.txt]het stukje van de Apache virtual hosts configuratie[/url] (op de Mac) dat er ook een [url=http://httpd.apache.org/docs/2.0/mod/core.html#serveralias]ServerAlias[/url] (alternative naam) stond, namelijk: [b]vogelfotografie.mac[/b]. De website is dus op [b]2 virtual host adressen[/b] te bereiken. 

[attention]Dit heeft niets met .Mac (dot Mac) te maken.[/attention]

De Windows computer vraagt aan de Mac: laat mij [b]vogelfotografie.mac[/b] zien. In de virtual hosts configuratie staat dus welke website de Apache server moet laten zien.

[h3]Geweldig!![/h3]
Als je dus meerdere van die virtual hosts op je Mac hebt draaien kun je op elke computer die websites bekijken. Zolang je op de bewuste computer de hosts bestand aanpast en de nep domein namen laat verwijzen naar de Mac's IP adres. Vergeet natuurlijk niet de ServerAlias'en goed te zetten in de virtual host configuratie blokken op de Mac.

[b]Happy website building!![/b]

[h2]Disclaimer[/h2]
Natuurlijk neemt Atlantisdesign geen verantwoording aan enige door u zelf aangebrachte schade aan het Mac OS X systeem.