---
import Layout from "@/layouts/Layout.astro";
import Intro from "@/components/Intro.astro";
import WebLinks from "@/components/WebLinks.astro";
import FormattedDate from "@/components/FormattedDate.astro";
import ArticlesList from "@/components/ArticlesList.astro";
import { type CollectionEntry, getCollection } from "astro:content";

import { AUTHOR } from "@/consts";

export async function getStaticPaths() {
    const posts = await getCollection("articles");
    return posts.map((post) => ({
        params: { slug: post.slug },
        props: post,
    }));
}

type Props = CollectionEntry<"articles">;

const post = Astro.props;
const { Content } = await post.render();

const metaData = {
    title: post.data.title,
    description: post.data.description,
    canonical: `artikelen/${post.slug}`,
};
---

<Layout metaData={metaData}>
    <meta property="og:title" content={post.data.title} slot="begin-head" />
    <meta property="og:description" content={post.data.description} />
    <meta property="og:type" content="article" slot="begin-head" />
    <meta property="og:url" content={`${Astro.site.href}${`artikelen/${post.slug}`}`} slot="begin-head" />

    <Intro>
        {post.data.description}
    </Intro>

    <aside id="side" class="grid_5">
        <ArticlesList heading="Artikelen" />

        <WebLinks heading="Links" />
    </aside>

    <main id="main" class="grid_11 omega">
        <h1>{post.data.title}</h1>

        <p><em>Geschreven door {AUTHOR} op <FormattedDate date={post.data.pubDate} /></em></p>

        <Content />
    </main>
</Layout>
